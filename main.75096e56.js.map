{"version":3,"sources":["scripts/main.js"],"names":["score","document","querySelector","button","cells","startGameText","loseGameText","winGameText","numOfCells","scoreCount","gameField","hasEmptyTile","r","includes","setRundom","randomRow","Math","floor","random","randomCol","numb","setCells","startPlay","innerText","loseGame","c","currentCell","rows","num","classList","value","add","remove","replace","checkZero","row","filter","slide","newRow","i","length","push","slideLeft","slideRight","reverse","slideUp","slideDown","addEventListener","e","preventDefault","code"],"mappings":"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","file":"main.75096e56.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst score = document.querySelector('.game-score');\nconst button = document.querySelector('.button');\nconst cells = document.querySelector('tbody');\nconst startGameText = document.querySelector('.message-start');\nconst loseGameText = document.querySelector('.message-lose');\nconst winGameText = document.querySelector('.message-win');\n\nconst numOfCells = 4;\nlet scoreCount = 0;\nlet gameField = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\nbutton.addEventListener('click', () => {\n  button.classList.replace('start', 'restart');\n  button.innerText = 'Restart';\n  startGameText.classList.add('hidden');\n  loseGameText.classList.add('hidden');\n  winGameText.classList.add('hidden');\n\n  startPlay();\n});\n\nfunction hasEmptyTile() {\n  for (let r = 0; r < numOfCells; r++) {\n    if (gameField[r].includes(0)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction setRundom() {\n  while (hasEmptyTile()) {\n    const randomRow = Math.floor((Math.random() * numOfCells));\n    const randomCol = Math.floor((Math.random() * numOfCells));\n\n    if (gameField[randomRow][randomCol] === 0) {\n      const numb = Math.random() < 0.9 ? 2 : 4;\n\n      gameField[randomRow][randomCol] = numb;\n      break;\n    }\n  }\n\n  setCells();\n}\n\nfunction startPlay() {\n  gameField = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  scoreCount = 0;\n  score.innerText = scoreCount;\n\n  setRundom();\n  setRundom();\n}\n\nfunction loseGame() {\n  if (hasEmptyTile()) {\n    return false;\n  }\n\n  for (let r = 0; r < numOfCells; r++) {\n    for (let c = 0; c < numOfCells; c++) {\n      if (gameField[r][c] === gameField[r][c + 1]) {\n        return false;\n      }\n    }\n  }\n\n  for (let r = 0; r < numOfCells - 1; r++) {\n    for (let c = 0; c < numOfCells; c++) {\n      if (gameField[r][c] === gameField[r + 1][c]) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nfunction setCells() {\n  for (let r = 0; r < numOfCells; r++) {\n    for (let c = 0; c < numOfCells; c++) {\n      const currentCell = cells.rows[r].cells[c];\n      const num = gameField[r][c];\n\n      currentCell.innerText = '';\n      currentCell.classList.value = '';\n      currentCell.classList.add('field-cell');\n\n      if (num > 0) {\n        currentCell.innerText = num;\n        currentCell.classList.add(`field-cell--${num}`);\n      }\n\n      if (num === 2048) {\n        winGameText.classList.remove('hidden');\n        button.classList.replace('restart', 'start');\n      }\n    }\n  }\n\n  if (loseGame()) {\n    loseGameText.classList.remove('hidden');\n  }\n}\n\ndocument.addEventListener('keyup', (e) => {\n  e.preventDefault();\n\n  switch (e.code) {\n    case 'ArrowLeft':\n      slideLeft();\n      setRundom();\n      break;\n\n    case 'ArrowRight':\n      slideRight();\n      setRundom();\n      break;\n\n    case 'ArrowUp':\n      slideUp();\n      setRundom();\n      break;\n\n    case 'ArrowDown':\n      slideDown();\n      setRundom();\n      break;\n  }\n\n  setCells();\n});\n\nfunction checkZero(row) {\n  return row.filter(num => num !== 0);\n}\n\nfunction slide(row) {\n  let newRow = checkZero(row);\n\n  for (let i = 0; i < newRow.length - 1; i++) {\n    if (newRow[i] === newRow[i + 1]) {\n      newRow[i] *= 2;\n      newRow[i + 1] = 0;\n      scoreCount += newRow[i];\n\n      score.innerText = scoreCount;\n    }\n  }\n\n  newRow = checkZero(newRow);\n\n  while (newRow.length < numOfCells) {\n    newRow.push(0);\n  }\n\n  return newRow;\n}\n\nfunction slideLeft() {\n  for (let r = 0; r < numOfCells; r++) {\n    let row = gameField[r];\n\n    row = slide(row);\n    gameField[r] = row;\n  }\n}\n\nfunction slideRight() {\n  for (let r = 0; r < numOfCells; r++) {\n    let row = gameField[r].reverse();\n\n    row = slide(row).reverse();\n    gameField[r] = row;\n  }\n}\n\nfunction slideUp() {\n  for (let c = 0; c < numOfCells; c++) {\n    let row = [\n      gameField[0][c], gameField[1][c], gameField[2][c], gameField[3][c],\n    ];\n\n    row = slide(row);\n\n    for (let r = 0; r < numOfCells; r++) {\n      gameField[r][c] = row[r];\n    }\n  }\n}\n\nfunction slideDown() {\n  for (let c = 0; c < numOfCells; c++) {\n    let row = [\n      gameField[0][c], gameField[1][c], gameField[2][c], gameField[3][c],\n    ].reverse();\n\n    row = slide(row).reverse();\n\n    for (let r = 0; r < numOfCells; r++) {\n      gameField[r][c] = row[r];\n    }\n  }\n}\n"]}